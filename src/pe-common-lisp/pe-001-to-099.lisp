;;;; pe-001-to-099.lisp ---
;;;; Created  : <2020-02-09 Sun 22:13:59 GMT>
;;;; Modified : <2020-3-07 Sat 20:52:01 gmt>

(in-package :peh)

(defun pe-001 ()
  "MULTIPLES OF 3 AND 5
https://projecteuler.net/problem=1

If we list all the natural numbers below 10 that are multiples of 3 or
5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000."
  (loop :for n :from 1 :to 1000
     :when (or (zerop (mod n 3))
               (zerop (mod n 5)))
     :sum n))

(defun pe-002 ()
  "EVEN FIBONACCI NUMBERS
Credits: https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the
 previous two terms.  By starting with 1 and 2, the first 10 terms
 will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... , F(n-1) + F(n+1)

By considering the terms in the Fibonacci sequence whose values do not
 exceed fou million, find the sum of the even-valued terms."
  (loop :for i :from 0 :upto 4000000
     :when (and (peh-utils:fibonaccip i)
                (zerop (mod i 2)))
     :sum i))

(defun pe-003 ()
  "Largest prime factor
https://projecteuler.net/problem=3

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ? "
  (reduce #'max (peh-utils:seq-prime-factors 600851475143)))

(defun pe-004 ()
  "Largest palindrome product
https://projecteuler.net/problem=4

A palindromic number reads the same both ways. The largest palindrome
made from the product of two 2-digit numbers is 9009 = 91 * 99.

Find the largest palindrome made from the product of two 3-digit numbers."
  (let ((3-digits (loop :for i :from 100 :upto 999 :collect i)))
    (reduce #'max
           (loop :for i :in (reverse 3-digits) :append
                (loop :for j :in (reverse 3-digits)
                   :when (peh-utils:palindromep (* i j))
                   :collect (* i j))))))

(defun pe-005 ()
  "Smallest multiple
https://projecteuler.net/problem=5

2520 is the smallest number that can be divided by each of the numbers
from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all
of the numbers from 1 to 20?"
  (loop :for i :from 20
     :thereis
       (when (and (zerop (mod i 1))
                  (zerop (mod i 2))
                  (zerop (mod i 3))
                  (zerop (mod i 4))
                  (zerop (mod i 5))
                  (zerop (mod i 6))
                  (zerop (mod i 7))
                  (zerop (mod i 8))
                  (zerop (mod i 9))
                  (zerop (mod i 10))
                  (zerop (mod i 11))
                  (zerop (mod i 12))
                  (zerop (mod i 13))
                  (zerop (mod i 14))
                  (zerop (mod i 15))
                  (zerop (mod i 16))
                  (zerop (mod i 17))
                  (zerop (mod i 18))
                  (zerop (mod i 19))
                  (zerop (mod i 20)))
         i)))

(defun pe-006 ()
  "Sum square difference
https://projecteuler.net/problem=6

The sum of the squares of the first ten natural numbers is,

1^2+2^2+...+10^2=385

The square of the sum of the first ten natural numbers is,

(1+2+...+10)^2=552=3025

Hence the difference between the sum of the squares of the first ten
natural numbers and the square of the sum is 3025 - 2212385 = 2640

Find the difference between the sum of the squares of the first one
hundred natural numbers and the square of the sum."
  (- (expt (peh-utils:sum-of-numbers 100) 2)
     (peh-utils:square-pyramidal-number 100)))

(defun pe-007 ()
  "10001st prime
https://projecteuler.net/problem=7

By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can
see that the 6th prime is 13.

What is the 10 001st prime number?
"
  (car (last (peh-utils:seq-prime-numbers 10001))))

(defun pe-008 ()
  "Largest product in a series
https://projecteuler.net/problem=8

The four adjacent digits in the 1000-digit number that have the
greatest product are 9x9x8x9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have
the greatest product. What is the value of this product?"
  (car (cdr (car (peh-utils:max-product-subseq
                  (peh-utils:slide-list
                   (peh-utils:number->list
                    (parse-integer
                     (format nil "~{~d~}"
                             (peh-utils:load-as-list "./files/pe-008")))) 13))))))

(defun pe-010 ()
  "Summation of primes
https://projecteuler.net/problem=8

The sum of the primes below 10 is 2+3+5+7=17

find the sum of all the primes below two million."
  (reduce #'+ (peh-utils:seq-primes-below 2000000)))
  

(defun pe-025 ()
  "1000-digit Fibonacci number
https://projecteuler.net/problem=25"
  )
;;;; pe-001-to-099.lisp
